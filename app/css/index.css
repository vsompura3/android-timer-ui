/* 
(bundle from remote urls) 
@import '//css-from-url';

(bundle from npm)
@import 'css-from-npm';

(bundle from local)
@import 'localfile.css' 

(PresetENV)
CSS powers @ https://preset-env.cssdb.org/features

(Easings)
only imports what you use 
https://easings.net
*/

:root {
  --hue: 220;

  --surface-1: hsl(var(--hue) 6% 12%);
  --surface-2: hsl(var(--hue) 5% 30%);
  --text-1: hsl(var(--hue) 10% 90%);
  --text-2: hsl(var(--hue) 10% 80%);
  --brand-1: hsl(var(--hue) 50% 67%);
  --brand-1-focus: hsl(var(--hue) 50% 77%);
}

html {
  block-size: 100%;
  inline-size: 100%;
  background: var(--surface-2);
  color: var(--text-1);
}

body {
  min-block-size: 100%;
  min-inline-size: 100%;
  box-sizing: border-box;
  margin: 0;

  display: grid;
  place-content: center;
  gap: 2ch;

  font-family: system-ui, sans-serif;

  @media (width >= 480px) {
    padding: 2em;
  }
}

.timer {
  --timer-inline-size: 25rem;

  max-inline-size: var(--timer-inline-size);
  display: grid;
  gap: 3rem;
  padding: 2rem;
  background: var(--surface-1);
  box-shadow: 0 2.8px 2.2px hsl(0 0% 0% / 2%), 0 6.7px 5.3px hsl(0 0% 0% / 2.8%),
    0 12.5px 10px hsl(0 0% 0% / 3.5%), 0 22.3px 17.9px hsl(0 0% 0% / 4.2%),
    0 41.8px 33.4px hsl(0 0% 0% / 5%), 0 100px 80px hsl(0 0% 0% / 7%);
  border: 1px solid var(--surface-2);
  border-radius: 5px;

  & > hr {
    width: 100%;
    border: none;
    border-bottom: 1px solid var(--surface-2);
    margin-block-end: -1rem;
  }

  & > footer {
    display: grid;
    place-items: center;
  }
}

header {
  display: grid;
  grid-auto-flow: column;
  grid-template-columns: [icon-start] 3rem [title] 1fr [icon-end] 3rem;
  align-items: center;

  & > h1 {
    grid-area: title;
    margin: 0;
    text-align: center;
    font-weight: 500;
    font-size: 1.5rem;
  }

  & > .icon:first-of-type {
    grid-area: icon-start;
    justify-self: start;
  }

  & > .icon:last-of-type {
    grid-area: icon-end;
    justify-self: end;
  }
}

.icon {
  inline-size: 3rem;
  block-size: 3rem;
  display: inline-flex;
  justify-content: center;
  align-items: center;

  appearance: none;
  cursor: pointer;
  border: none;
  background: none;
  padding: 0;
  border-radius: 50%;

  &:is(:focus, :hover) {
    outline-offset: 5px;
    background: var(--surface-2);
  }

  & > svg {
    fill: var(--text-2);
    height: 50%;
  }
}

time {
  font-size: 2.5rem;
  font-weight: 400;
  font-variant-numeric: tabular-nums;
  color: var(--brand-1);

  display: flex;
  gap: 1ch;
  justify-content: space-around;
  align-items: center;

  @media (width >= 480px) {
    font-size: 3.5rem;
  }

  & > span {
    display: flex;
    align-items: baseline;
    justify-content: flex-end;
    inline-size: 2.5ch;

    & > small {
      font-size: 45%;
    }
  }
}

.keypad {
  --keypad-row-gap: 2rem;
  --keypad-col-gap: 3rem;

  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  gap: var(--keypad-row-gap) var(--keypad-col-gap);
  font-variant-numeric: tabular-nums;

  /* & > * {
    flex-basis: calc(33.33% - var(--num-gap));
    flex-shrink: 0;
  } */
}

.numkey {
  --spacing-multiplier: 3;
  --multiplied-gap: calc(var(--keypad-col-gap) * var(--spacing-multiplier));
  --offset-timer-size: calc(var(--timer-inline-size) - var(--multiplied-gap));
  --key-size: calc(var(--offset-timer-size) / 3);

  inline-size: var(--key-size);
  block-size: var(--key-size);

  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
  border-radius: 50%;

  cursor: pointer;
  appearance: none;
  border: none;
  background: none;
  color: inherit;

  transition: background-color 0.5s ease;

  @media (width >= 480px) {
    font-size: 2.5rem;
  }

  &:is(:focus, :hover) {
    border: 1px solid var(--surface-2);
  }

  &:active {
    transition: none;
    background: var(--surface-2);
  }

  @media (width >= 720px) {
    font-size: 2.5rem;
  }
}

button {
  &:not(:focus-visible):is(:focus, :hover) {
    outline-offset: 5px;
    outline-color: var(--brand-1);
  }
}

.fab {
  inline-size: 4rem;
  block-size: 4rem;
  display: grid;
  place-items: center;

  cursor: pointer;
  background: var(--brand-1);
  border-radius: 50%;
  box-shadow: 0 10px 5px hsl(var(--hue) 5% 10%);
  border: none;

  position: relative;

  &:is(:focus, :hover) {
    outline-offset: 5px;
    background: var(--brand-1-focus);
  }

  &:active {
    top: 1.5px;
    box-shadow: 0 6px 5px hsl(var(--hue) 5% 10%);
  }

  & > svg {
    height: 50%;
    fill: var(--surface-1);
  }
}
